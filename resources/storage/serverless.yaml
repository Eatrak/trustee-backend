service: trustee-storage

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: eu-central-1
  stage: ${opt:stage, 'dev'}

resources:
  Resources:
    UserPool:
      Type: AWS::Cognito::UserPool
      DeletionPolicy: Retain
      Properties:
        UserPoolName: trustee-${self:provider.stage}
        Policies:
          PasswordPolicy:
            MinimumLength: 6
            TemporaryPasswordValidityDays: 0
        UsernameAttributes:
          - email
        Schema:
          - Name: email
            AttributeDataType: String
            Required: false
            Mutable: true
          - Name: id
            AttributeDataType: String
            Required: false
    UserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      DeletionPolicy: Retain
      Properties:
        UserPoolId: !Ref UserPool
        ClientName: trustee-client-${self:provider.stage}
        ExplicitAuthFlows:
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_ADMIN_USER_PASSWORD_AUTH
        GenerateSecret: false
    MainTableDev:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      UpdateReplacePolicy: Retain
      Properties:
        TableName: trustee-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE

  Outputs:
    UserPool:
      Value: !Ref UserPool
      Export:
        Name: TrusteeUserPool
    UserPoolArn:
      Value: !GetAtt UserPool.Arn
      Export:
        Name: TrusteeUserPoolArn-${self:provider.stage}
    UserPoolClient:
      Value: !Ref UserPoolClient
      Export:
        Name: TrusteeUserPoolClient
    MainTableArnDev:
      Value: !GetAtt MainTableDev.Arn
      Export:
        Name: TrusteeMainTableArn-dev
