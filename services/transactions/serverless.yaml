service: trustee-transactions
frameworkVersion: '3'

plugins:
  - serverless-webpack

package:
  individually: true

custom:
  webpack:
    webpackConfig: ../../webpack.config.js
    packager: 'npm'

provider:
    name: aws
    runtime: nodejs18.x
    region: eu-central-1
    versionFunctions: false
    stage: ${opt:stage, 'dev'}
    apiGateway:
        restApiId: !ImportValue TrusteeRestApiGatewayId-${self:provider.stage}
        restApiRootResourceId: !ImportValue TrusteeRestApiGatewayRootResourceId-${self:provider.stage}
    environment:
        USER_POOL_ID: !ImportValue TrusteeUserPool
        USER_POOL_CLIENT_ID: !ImportValue TrusteeUserPoolClient
        REGION: !Ref AWS::Region
        STAGE: ${self:provider.stage}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:Query
              - dynamodb:PutItem
          Resource: !ImportValue TrusteeMainTableArn-${self:provider.stage}
        - Effect: Allow
          Action:
              - dynamodb:Query
          Resource:
            Fn::Join:
              - ""
              - - !ImportValue TrusteeMainTableArn-${self:provider.stage}
                - /index/GSI1

functions:
    GetTransactions:
        handler: functions/getTransactions.handler
        events:
            - http:
                  method: GET
                  path: /transactions
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    GetTransactionCategories:
        handler: functions/getTransactionCategories.handler
        events:
            - http:
                  method: GET
                  path: /transaction-categories
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    CreateTransactionCategory:
        handler: functions/createTransactionCategory.handler
        events:
            - http:
                  method: POST
                  path: /transaction-categories
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    CreateTransaction:
        handler: functions/createTransaction.handler
        events:
            - http:
                  method: POST
                  path: /transactions
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email

    GetWallets:
        handler: functions/getWallets.handler
        events:
            - http:
                  method: GET
                  path: /wallets
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    CreateWallet:
        handler: functions/createWallet.handler
        events:
            - http:
                  method: POST
                  path: /wallets
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    GetTotalIncomeByCurrency:
        handler: functions/getTotalIncomeByCurrency.handler
        events:
            - http:
                  method: GET
                  path: /currencies/income
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    GetTotalExpenseByCurrency:
        handler: functions/getTotalExpenseByCurrency.handler
        events:
            - http:
                  method: GET
                  path: /currencies/expense
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
    GetCurrencies:
        handler: functions/getCurrencies.handler
        events:
            - http:
                  method: GET
                  path: /currencies
                  cors: true
                  authorizer:
                      name: AuthAuthorizer
                      type: COGNITO_USER_POOLS
                      arn: !ImportValue TrusteeUserPoolArn-${self:provider.stage}
                      claims:
                          - email
